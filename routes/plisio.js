require("dotenv").config();
const express = require("express");
const router = express.Router();
const axios = require("axios");
const Player = require("../models/Player");
const Fund = require('../models/Fund');

// POST /plisio/create-payment
router.post("/create-payment", async (req, res) => {
  console.log("‚Üí [plisio] /create-payment BODY:", req.body);
  const { telegramId, amount } = req.body;

  const params = {
    api_key:             process.env.PLISIO_API_KEY,
    shop_id:             process.env.PLISIO_SHOP_ID,
    order_name:          "MMM GO Premium",
    source_currency:     "USD", 
    order_number:        telegramId,
    return_existing:     1,
    source_amount:       amount || 10,
    callback_url:        "https://mmmgo-backend.onrender.com/plisio/callback",
    success_invoice_url: "https://mmmgo-frontend.onrender.com/payment-success",
    fail_invoice_url:    "https://mmmgo-frontend.onrender.com/payment-failed",
    allowed_psys_cids:   "USDT_TRX"
  };

  try {
    const { data } = await axios.get(
      "https://api.plisio.net/api/v1/invoices/new",
      { params }
    );
    return res.json(data);
  } catch (err) {
    console.error("‚ùå [plisio] error.response.data:", err.response?.data);
    console.error("‚ùå [plisio] err.message         :", err.message);
    return res
      .status(err.response?.status || 500)
      .json({ error: "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞", details: err.response?.data });
  }
});

// POST /plisio/callback
// –ü—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
router.post("/callback", async (req, res) => {
  console.log("‚Üí [plisio] /callback BODY:", req.body);
  const { order_number: telegramId, status } = req.body;

  if (status === "completed") {
    const now = new Date();
    const expires = new Date(now);
    expires.setDate(expires.getDate() + 30); // –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 30 –¥–Ω–µ–π
     // 60% –æ—Ç —É–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ –¥–æ–Ω–∞—Ç–∞ –∏–¥—ë—Ç –≤ –ø—Ä–∏–∑–æ–≤–æ–π –ø—É–ª
// USDT: –ø—Ä–æ—Å—Ç–æ 60% –æ—Ç –∑–∞–ø–ª–∞—á–µ–Ω–Ω–æ–π —Å—É–º–º—ã
// 2) –î–∞—Ç–∞ —Å—Ç–∞—Ä—Ç–∞ SR ‚Äî 1‚Äë–µ —á–∏—Å–ª–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–µ—Å—è—Ü–∞   
const srStart = new Date(now.getFullYear(), now.getMonth() + 1, 1);
  const usdtIncrement = source_amount * 0.6;
  await Fund.findOneAndUpdate({}, { $inc: { total: usdtIncrement } });
  console.log(`üí∞ –ü—É–ª —É–≤–µ–ª–∏—á–µ–Ω –Ω–∞ ${usdtIncrement.toFixed(2)} USDT`);

    const player = await Player.findOneAndUpdate(
      { telegramId },
      {
        isInvestor:     true,
        premiumSince:   now,
        premiumExpires: expires,
        srActiveSince: srStart,
        $inc: {
                   balance: 50000,
                   // –ø–æ–∫—É–ø–∫–∞ –ø—Ä–µ–º–∏—É–º–∞ —Ç–æ–∂–µ –±–æ–Ω—É—Å –¥–ª—è –Ω–µ–¥–µ–ª—å–Ω–æ–π –º–∏—Å—Å–∏–∏
                   "weeklyMission.current": 50000
                 },
        srRating:       0  // —Å–±—Ä–æ—Å —Ä–µ–π—Ç–∏–Ω–≥–∞ –ø—Ä–∏ –ø—Ä–æ–¥–ª–µ–Ω–∏–∏
      },
      { upsert: true, new: true }
    );

    console.log(`‚úÖ ${telegramId} –ø–æ–ª—É—á–∏–ª –ø—Ä–µ–º–∏—É–º –¥–æ ${expires.toISOString()}, SR –Ω–∞—á–Ω—ë—Ç—Å—è ${srStart.toISOString()}, –±–∞–ª–∞–Ω—Å=${player.balance}`);
  }

  res.sendStatus(200);
});

module.exports = router;
