const express = require("express");
const router = express.Router();
const Player = require("../models/Player");

// ‚úÖ –°–Ω–∞—á–∞–ª–∞ GET /count
router.get("/count", async (req, res) => {
  try {
    const count = await Player.countDocuments();
    res.json({ totalPlayers: count });
  } catch (err) {
    res.status(500).json({ error: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–≥—Ä–æ–∫–æ–≤" });
  }
});

// ‚¨áÔ∏è –ü–æ—Ç–æ–º GET /:telegramId —Å —É—á—ë—Ç–æ–º —Ä–µ—Ñ–µ—Ä–∞–ª–∞
router.get("/:telegramId", async (req, res) => {
  try {
    let player = await Player.findOne({ telegramId: req.params.telegramId });

    if (!player) {
      const refId = req.query.ref;

      player = new Player({
        telegramId: req.params.telegramId,
        playerName: "–ù–æ–≤—ã–π –∏–≥—Ä–æ–∫",
        balance: 0,
        level: 0,
        isBoostActive: false,
        isInvestor: false,
        srRating: 0,
        referrals: 0,
        totalTaps: 0,
        adsWatched: 0,
        boostCooldownUntil: null,
      });

      await player.save();
      console.log("üÜï –ù–æ–≤—ã–π –∏–≥—Ä–æ–∫ —Å–æ–∑–¥–∞–Ω:", player);

      if (refId && refId !== req.params.telegramId) {
        try {
          const referrer = await Player.findOne({ telegramId: refId });
          if (referrer) {
            referrer.referrals += 1;
            referrer.balance += 5000; // üí∏ –ë–æ–Ω—É—Å –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞
            await referrer.save();
            console.log(`üë• –†–µ—Ñ–µ—Ä–∞–ª –∑–∞—Å—á–∏—Ç–∞–Ω! ${refId} –ø—Ä–∏–≥–ª–∞—Å–∏–ª ${req.params.telegramId}`);
          }
        } catch (err) {
          console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–∏ –±–æ–Ω—É—Å–∞ –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞:", err);
        }
      }
    }
// –ï—Å–ª–∏ –Ω–µ—Ç dailyTasks ‚Äî —Å–æ–∑–¥–∞—ë–º –±–∞–∑—É
if (!player.dailyTasks) {
  player.dailyTasks = {
    dailyTaps: 0,
    dailyTarget: 5000,
    rewardReceived: false
  };
}

// –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è weeklyMission
if (!player.weeklyMission) {
  player.weeklyMission = {
    mavrodikGoal: 1000000,
    current: 0,
    completed: false
  };
}

// –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –ø–∞—Ä—Ç–Ω—ë—Ä–∞
if (typeof player.partnerSubscribed === "undefined") {
  player.partnerSubscribed = false;
}

await player.save(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    // ‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞ –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
    res.json(player);

  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–≥—Ä–æ–∫–∞:", err);
    res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
  }
});
// ‚¨áÔ∏è POST ‚Äî –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ –∏ SR —Ä–µ–π—Ç–∏–Ω–≥
router.post("/", async (req, res) => {
  console.log("üì• –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è:", req.body); // ‚úÖ –í–°–¢–ê–í–¨ –°–Æ–î–ê
  const {
    telegramId,
    playerName,
    balance,
    level,
    isBoostActive,
    isInvestor,
    referrals,
    totalTaps,
    adsWatched,
    srRating,
    boostCooldownUntil,

    // üîΩ –ù–æ–≤—ã–µ –ø–æ–ª—è
    dailyTasks,
    weeklyMission,
    partnerSubscribed,
    balanceBonus
  } = req.body;

  try {
    const updated = await Player.findOneAndUpdate(
      { telegramId },
      {
        telegramId,
        playerName,
        balance,
        level,
        isBoostActive,
        isInvestor,
        referrals,
        totalTaps,
        adsWatched,
        srRating,
        boostCooldownUntil: boostCooldownUntil || null,

        // üîΩ –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª—è
        ...(dailyTasks && { dailyTasks }),
        ...(weeklyMission && { weeklyMission }),
        ...(typeof partnerSubscribed !== "undefined" && { partnerSubscribed })
        (typeof balanceBonus !== "undefined" && { balanceBonus })
      },
      { upsert: true, new: true }
    );

    res.json(updated);
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞:", err);
    res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞", details: err });
  }
});

module.exports = router;