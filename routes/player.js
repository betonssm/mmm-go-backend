const express = require("express");
const router = express.Router();
const Player = require("../models/Player");

// GET /player/count - –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤
router.get("/count", async (req, res) => {
  try {
    const count = await Player.countDocuments();
    res.json({ totalPlayers: count });
  } catch (err) {
    res.status(500).json({ error: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–≥—Ä–æ–∫–æ–≤" });
  }
});

// GET /player/:telegramId - –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ —Å —É—á—ë—Ç–æ–º —Ä–µ—Ñ–µ—Ä–∞–ª–∞
router.get("/:telegramId", async (req, res) => {
  try {
    let player = await Player.findOne({ telegramId: req.params.telegramId });
    if (!player) {
      const refId = req.query.ref;
      player = new Player({
        telegramId: req.params.telegramId,
        playerName: "–ù–æ–≤—ã–π –∏–≥—Ä–æ–∫",
        balance: 0,
        level: 0,
        isBoostActive: false,
        isInvestor: false,
        premiumSince: null,
        premiumExpires: null,
        srRating: 0,
        referrals: 0,
        totalTaps: 0,
        adsWatched: 0,
        boostCooldownUntil: null,
        partnerSubscribed: false,
      });
      await player.save();
      console.log("üÜï –ù–æ–≤—ã–π –∏–≥—Ä–æ–∫ —Å–æ–∑–¥–∞–Ω:", player);

      if (refId && refId !== req.params.telegramId) {
        const referrer = await Player.findOne({ telegramId: refId });
        if (referrer) {
          referrer.referrals += 1;
          referrer.balance += 5000; // –±–æ–Ω—É—Å –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞
          await referrer.save();
          console.log(`üë• –†–µ—Ñ–µ—Ä–∞–ª –∑–∞—Å—á–∏—Ç–∞–Ω! ${refId} –ø—Ä–∏–≥–ª–∞—Å–∏–ª ${req.params.telegramId}`);
        }
      }
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏
    if (!player.dailyTasks) player.dailyTasks = { dailyTaps: 0, dailyTarget: 5000, rewardReceived: false };
    if (!player.weeklyMission) player.weeklyMission = { mavrodikGoal: 100000, current: 0, completed: false };
    if (typeof player.partnerSubscribed === "undefined") player.partnerSubscribed = false;

    await player.save();
    res.json(player);
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–≥—Ä–æ–∫–∞:", err);
    res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
  }
});

// POST /player - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π –∏–≥—Ä–æ–∫–∞, –≤–∫–ª—é—á–∞—è SR-—Ä–µ–π—Ç–∏–Ω–≥ —Å —É—á—ë—Ç–æ–º –ø–æ–¥–ø–∏—Å–∫–∏
router.post("/", async (req, res) => {
  console.log("üì• –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞ (POST):", req.body);
  const {
    telegramId,
    playerName,
    level,
    isBoostActive,
    referrals,
    totalTaps,
    adsWatched,
    boostCooldownUntil,
    partnerSubscribed,
    dailyTasks,
    weeklyMission,
    balanceBonus,
    // srRating –ø—Ä–∏—Ö–æ–¥–∏—Ç –∏–∑ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –∫–æ–¥–∞, –Ω–æ –º—ã —É—á—Ç—ë–º –ø–æ–¥–ø–∏—Å–∫—É –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ
    srRating,
  } = req.body;

  try {
    const player = await Player.findOne({ telegramId });
    if (!player) {
      return res.status(404).json({ error: "–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω" });
    }

    const now = new Date();
    const updateFields = {};

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –ø–æ–ª–µ–π
    if (playerName) updateFields.playerName = playerName;
    if (typeof level !== "undefined") updateFields.level = level;
    if (typeof isBoostActive !== "undefined") updateFields.isBoostActive = isBoostActive;
    if (typeof referrals !== "undefined") updateFields.referrals = referrals;
    if (typeof totalTaps !== "undefined") updateFields.totalTaps = totalTaps;
    if (typeof adsWatched !== "undefined") updateFields.adsWatched = adsWatched;
    if (typeof boostCooldownUntil !== "undefined") updateFields.boostCooldownUntil = boostCooldownUntil || null;
    if (typeof partnerSubscribed !== "undefined") updateFields.partnerSubscribed = partnerSubscribed;

    // –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞
    if (typeof balanceBonus !== "undefined" && balanceBonus > 0) {
      updateFields.balance = (player.balance || 0) + balanceBonus;
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∏ –Ω–µ–¥–µ–ª—å–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π
    if (dailyTasks) {
      // –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –Ω–∞–≥—Ä–∞–¥—ã
      if (!(dailyTasks.rewardReceived && player.lastDailyRewardAt && now.toDateString() === new Date(player.lastDailyRewardAt).toDateString())) {
        updateFields.dailyTasks = dailyTasks;
        if (dailyTasks.rewardReceived) updateFields.lastDailyRewardAt = now;
      }
    }
    if (weeklyMission) {
      // –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ–¥–µ–ª—å–Ω–æ–π –Ω–∞–≥—Ä–∞–¥—ã
      const lastWeek = player.lastWeeklyRewardAt ? getWeekNumber(new Date(player.lastWeeklyRewardAt)) : null;
      const currentWeek = getWeekNumber(now);
      if (!(weeklyMission.completed && lastWeek === currentWeek)) {
        updateFields.weeklyMission = weeklyMission;
        if (weeklyMission.completed) updateFields.lastWeeklyRewardAt = now;
      }
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ SR-—Ä–µ–π—Ç–∏–Ω–≥–∞ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–µ
    if (typeof srRating !== "undefined") {
      if (player.isInvestor && player.premiumExpires && now < player.premiumExpires) {
        updateFields.srRating = srRating;
      } else {
        updateFields.srRating = 0;
      }
    }

    const updated = await Player.findOneAndUpdate(
      { telegramId },
      updateFields,
      { new: true }
    );

    res.json(updated);
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞:", err);
    res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞", details: err });
  }
});

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–æ–º–µ—Ä–∞ –Ω–µ–¥–µ–ª–∏
function getWeekNumber(d) {
  const date = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()));
  const dayNum = date.getUTCDay() || 7;
  date.setUTCDate(date.getUTCDate() + 4 - dayNum);
  const yearStart = new Date(Date.UTC(date.getUTCFullYear(), 0, 1));
  return Math.ceil(((date - yearStart) / 86400000 + 1) / 7);
}

module.exports = router;