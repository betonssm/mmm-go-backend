require("dotenv").config();
const express = require("express");
const mongoose = require("mongoose");
const cors = require("cors");
const cron = require("node-cron");
const Player = require("./models/Player");
const Fund = require('./models/Fund');
const fundRoutes = require('./routes/fund');
const app = express();
app.use(cors());
app.use(express.json());
app.use('/fund', fundRoutes);

// –ü–ª–∞—Ç—ë–∂–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
const plisioRoutes = require("./routes/plisio");
app.use("/plisio", plisioRoutes);

// –ò–≥—Ä–æ–≤—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
const playerRoutes = require("./routes/player");
app.use("/player", playerRoutes);
const adminRoutes = require("./routes/admin");
app.use("/admin", adminRoutes);


mongoose.connect(process.env.MONGO_URI, {
  useNewUrlParser: true,
  useUnifiedTopology: true,
})
  .then(async () => {
    console.log("MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω");
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –ø—É–ª–∞, –µ—Å–ª–∏ –æ–Ω –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω
    const existing = await Fund.findOne();
    if (!existing) {
      await Fund.create({ total: 0 });
      console.log("üî∞ –î–æ–∫—É–º–µ–Ω—Ç –ø—É–ª–∞ –≤—ã–ø–ª–∞—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
    }
  })
  .catch(err => console.error("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:", err));
const PORT = process.env.PORT || 4000;
app.listen(PORT, () => console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`));

// üïì –°–±—Ä–æ—Å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 00:00 UTC
cron.schedule("0 0 * * *", async () => {
  console.log("‚è∞ –°–±—Ä–æ—Å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π...");
  try {
    await Player.updateMany({}, {
      $set: {
        "dailyTasks.dailyTaps": 0,
        "dailyTasks.rewardReceived": false,
        adsWatched: 0
      }
    });
    console.log("‚úÖ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è —Å–±—Ä–æ—à–µ–Ω—ã");
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π:", err);
  }
});

// üïñ –°–±—Ä–æ—Å –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –º–∏—Å—Å–∏–π –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é –≤ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –≤ 00:00 UTC
cron.schedule("0 0 * * 1", async () => {
  console.log("üìÜ –°–±—Ä–æ—Å –Ω–µ–¥–µ–ª—å–Ω–æ–π –º–∏—Å—Å–∏–∏...");
  try {
    await Player.updateMany({}, {
      $set: {
        "weeklyMission.current": 0,
        "weeklyMission.completed": false
      }
    });
    console.log("‚úÖ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –º–∏—Å—Å–∏–∏ —Å–±—Ä–æ—à–µ–Ω—ã");
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –Ω–µ–¥–µ–ª—å–Ω–æ–π –º–∏—Å—Å–∏–∏:", err);
  }
});

// üï∞Ô∏è –ï–∂–µ–º–µ—Å—è—á–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ–æ–Ω–¥–∞ –∏ —Å–±—Ä–æ—Å SR-—Ä–µ–π—Ç–∏–Ω–≥–∞
// –§–æ—Ä–º–∞—Ç: –≤ ENV –∑–∞–¥–∞—Ç—å MONTHLY_FUND, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1000000
const MONTHLY_FUND = Number(process.env.MONTHLY_FUND) || 1000000;
cron.schedule("10 0 1 * *", async () => {
  console.log("‚è∞ –ó–∞–ø—É—Å–∫ –µ–∂–µ–º–µ—Å—è—á–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ñ–æ–Ω–¥–∞...");
  const now = new Date();
  const firstDayLastMonth = new Date(Date.UTC(
    now.getUTCFullYear(), now.getUTCMonth() - 1, 1
  ));
  const firstDayThisMonth = new Date(Date.UTC(
    now.getUTCFullYear(), now.getUTCMonth(), 1
  ));
  try {
    const premiumPlayers = await Player.find({
      isInvestor: true,
       // SR‚Äë—Ä–µ–π—Ç–∏–Ω–≥–∏ —É —ç—Ç–∏—Ö –∏–≥—Ä–æ–∫–æ–≤ —É–∂–µ –±—ã–ª–∏ –∞–∫—Ç–∏–≤–Ω—ã —Å 1‚Äë–≥–æ —á–∏—Å–ª–∞ –ø—Ä–æ—à–ª–æ–≥–æ –º–µ—Å—è—Ü–∞
  srActiveSince: { $lte: firstDayLastMonth },
  // –ê –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å –¥–æ –∫–æ–Ω—Ü–∞ –ø—Ä–æ—à–ª–æ–≥–æ –º–µ—Å—è—Ü–∞
 premiumSince:  { $lt: firstDayThisMonth }
  
    }).sort({ srRating: -1 });

    if (!premiumPlayers.length) {
      console.log("‚ö†Ô∏è –ù–µ—Ç –ø—Ä–µ–º–∏—É–º-–∏–≥—Ä–æ–∫–æ–≤ –∑–∞ –ø—Ä–æ—à–ª—ã–π –º–µ—Å—è—Ü.");
    } else {
      const cutoffIndex = Math.ceil(premiumPlayers.length * 0.1);
      const topPlayers = premiumPlayers.slice(0, cutoffIndex);
      const share = Math.floor(MONTHLY_FUND / topPlayers.length);

      for (const p of topPlayers) {
        await Player.updateOne({ _id: p._id }, { $inc: { balance: share } });
      }
      console.log(`‚úÖ –§–æ–Ω–¥ ${MONTHLY_FUND} —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—ë–Ω –º–µ–∂–¥—É ${topPlayers.length} –∏–≥—Ä–æ–∫–∞–º–∏, –ø–æ ${share} –º–∞–≤—Ä–æ–¥–∏–∫–æ–≤ –∫–∞–∂–¥–æ–º—É.`);
    }
    // –°–±—Ä–æ—Å SR-—Ä–µ–π—Ç–∏–Ω–≥–∞ –≤—Å–µ—Ö –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤
    await Player.updateMany({ isInvestor: true }, { $set: { srRating: 0 } });
    console.log("üîÑ SR-—Ä–µ–π—Ç–∏–Ω–≥–∏ —Å–±—Ä–æ—à–µ–Ω—ã –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤");
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –µ–∂–µ–º–µ—Å—è—á–Ω–æ–≥–æ —Ñ–æ–Ω–¥–∞:", err);
  }
});